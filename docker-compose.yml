services:
  # quality check service
  quality:
    build:
      context: .
      target: quality
    volumes:
      - .:/app

  # development database service
  development_database:
    image: postgres:15-alpine
    container_name: development_database
    environment:
      - NODE_ENV=development
    ports:
      - "5432:5432" # Expose on a different port (5433) to avoid conflicts
    volumes:
      - development_database_data:/var/lib/postgresql/data

  # testing database service
  testing_database:
    image: postgres:15-alpine
    container_name: testing_database
    environment:
      - NODE_ENV=testing
    ports:
      - "5433:5433" # Expose on a different port (5433) to avoid conflicts
    volumes:
      - testing_database_data:/var/lib/postgresql/data

  # development service
  development:
    build:
      context: .
      target: development
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    command: ["npx", "tsx", "src/server.ts"]
    depends_on:
      quality:
        condition: service_completed_successfully

  # production service
  production:
    build:
      context: .
      target: production
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    command: ["node", "dist/server.js"]
    depends_on:
      quality:
        condition: service_completed_successfully

# testing service
  testing:
    build:
      context: .
      target: testing
    environment:
      - NODE_ENV=testing
    ports:
      - "3000:3000"
    command: ["npm", "test"]
    depends_on:
      quality:
        condition: service_completed_successfully

volumes:
  development_database_data:
  testing_database_data:
