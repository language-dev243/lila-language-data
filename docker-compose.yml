services:
  # quality check service
  quality:
    build:
      context: .
      target: quality
    volumes:
      - .:/app

  # development database service
  development_database:
    image: postgres:15-alpine
    container_name: development_database
    environment:
      - NODE_ENV=development
    ports:
      - "5432:5432"
    volumes:
      - development_database_data:/var/lib/postgresql/data

  # development service
  development:
    build:
      context: .
      target: development
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - .:/app
    ports:
      - "3003:3000"
    command: ["npx", "tsx", "src/server.ts"]
    depends_on:
      quality:
        condition: service_completed_successfully

  # production service
  production:
    build:
      context: .
      target: production
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    ports:
      - "3000:3000"
    command: ["node", "dist/server.js"]
    depends_on:
      quality:
        condition: service_completed_successfully

  # testing service
  testing:
    build:
      context: .
      target: testing
    environment:
      - NODE_ENV=testing
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    ports:
      - "3001:3000"
    command: ["npm", "test"]
    depends_on:
      quality:
        condition: service_completed_successfully

volumes:
  development_database_data:
